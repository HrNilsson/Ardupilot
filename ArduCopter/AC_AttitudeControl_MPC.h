#ifndef AC_ATTITUDE_MPC_H
#define AC_ATTITUDE_MPC_H

#include <AP_Math/MMath.h>
#include <AP_math/midaco.h>
#include <AP_AHRS/AP_AHRS.h>
#include <AP_Motors/AP_Motors.h>

class AC_AttitudeControl_MPC {
public:
	AC_AttitudeControl_MPC( AP_AHRS& ahrs,
                            AP_Motors& motors) :
        _ahrs(ahrs),
        _motors(motors)
    {
		_f     = ptrAlloc(3, 1, f);
		_dx    = ptrAlloc(6, 1, dx);
		_y     = ptrAlloc(6, 1, y);
		_IqTnQ = ptrAlloc(90, 6, IqTnQ);
		_IqC   = ptrAlloc(90, 3, IqC);
		_WyG   = ptrAlloc(90, 3, WyG);
		_R     = ptrAlloc(90, 1, R);
		_F     = ptrAlloc(90, 1, F);
		_temp1 = ptrAlloc(90, 1, temp1);
		_temp2 = ptrAlloc(90, 1, temp2);
		_temp3 = ptrAlloc(1, 90, temp3);
		_temp4 = ptrAlloc(1, 3, temp4);
    }

    virtual ~AC_AttitudeControl_MPC()
    {}

    void initMPC(); //inits midaco
	void updateState(); //updates dx and y
	void updateMatrices(double rollTarget, double pitchTarget, double yawTarget); //calculates f
	void solve(); //Invokes the midaco solver
	void outputToMotor();

	double getf1();
	double getf2();
	double getf3();
	double getx1();
	double getx2();
	double getx3();

	int convert(double d);
private:
    // references to external libraries
    const AP_AHRS&      _ahrs;
    AP_Motors&          _motors;

    // Array declarations

    double f[3][1] = {{0},{0},{0}};

    double old_x[6] = {{0},{0},{0},{0},{0},{0}};
    double dx[6][1] = { {0}, {0}, {0}, {0}, {0}, {0} };
    double y[3][1] = { {0}, {0}, {0} };

    double IqTnQ[90][6] = {{1,0.01,0,0,0,0},{0,0,1,0.01,0,0},{0,0,0,0,1,0.01},{2,0.03,0,0,0,0},{0,0,2,0.03,0,0},{0,0,0,0,2,0.03},{3,0.06,0,0,0,0},{0,0,3,0.06,0,0},{0,0,0,0,3,0.06},{4,0.1,0,0,0,0},{0,0,4,0.1,0,0},{0,0,0,0,4,0.1},{5,0.15,0,0,0,0},{0,0,5,0.15,0,0},{0,0,0,0,5,0.15},{6,0.21,0,0,0,0},{0,0,6,0.21,0,0},{0,0,0,0,6,0.21},{7,0.28,0,0,0,0},{0,0,7,0.28,0,0},{0,0,0,0,7,0.28},{8,0.36,0,0,0,0},{0,0,8,0.36,0,0},{0,0,0,0,8,0.36},{9,0.45,0,0,0,0},{0,0,9,0.45,0,0},{0,0,0,0,9,0.45},{10,0.55,0,0,0,0},{0,0,10,0.55,0,0},{0,0,0,0,10,0.55},{11,0.66,0,0,0,0},{0,0,11,0.66,0,0},{0,0,0,0,11,0.66},{12,0.78,0,0,0,0},{0,0,12,0.78,0,0},{0,0,0,0,12,0.78},{13,0.91,0,0,0,0},{0,0,13,0.91,0,0},{0,0,0,0,13,0.91},{14,1.05,0,0,0,0},{0,0,14,1.05,0,0},{0,0,0,0,14,1.05},{15,1.2,0,0,0,0},{0,0,15,1.2,0,0},{0,0,0,0,15,1.2},{16,1.36,0,0,0,0},{0,0,16,1.36,0,0},{0,0,0,0,16,1.36},{17,1.53,0,0,0,0},{0,0,17,1.53,0,0},{0,0,0,0,17,1.53},{18,1.71,0,0,0,0},{0,0,18,1.71,0,0},{0,0,0,0,18,1.71},{19,1.9,0,0,0,0},{0,0,19,1.9,0,0},{0,0,0,0,19,1.9},{20,2.1,0,0,0,0},{0,0,20,2.1,0,0},{0,0,0,0,20,2.1},{21,2.31,0,0,0,0},{0,0,21,2.31,0,0},{0,0,0,0,21,2.31},{22,2.53,0,0,0,0},{0,0,22,2.53,0,0},{0,0,0,0,22,2.53},{23,2.76,0,0,0,0},{0,0,23,2.76,0,0},{0,0,0,0,23,2.76},{24,3,0,0,0,0},{0,0,24,3,0,0},{0,0,0,0,24,3},{25,3.25,0,0,0,0},{0,0,25,3.25,0,0},{0,0,0,0,25,3.25},{26,3.51,0,0,0,0},{0,0,26,3.51,0,0},{0,0,0,0,26,3.51},{27,3.78,0,0,0,0},{0,0,27,3.78,0,0},{0,0,0,0,27,3.78},{28,4.06,0,0,0,0},{0,0,28,4.06,0,0},{0,0,0,0,28,4.06},{29,4.35,0,0,0,0},{0,0,29,4.35,0,0},{0,0,0,0,29,4.35},{30,4.65,0,0,0,0},{0,0,30,4.65,0,0},{0,0,0,0,30,4.65}};
    double IqC[90][3] = { {1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1},{1,0,0},{0,1,0},{0,0,1}};
    double WyG[90][3] = {{0.009816,0,0},{0,0.0030904,0},{0,0,0.017197},{0.039264,0,0},{0,0.012361,0},{0,0,0.068789},{0.088344,0,0},{0,0.027813,0},{0,0,0.15478},{0.15706,0,0},{0,0.049446,0},{0,0,0.27516},{0.2454,0,0},{0,0.077259,0},{0,0,0.42993},{0.35338,0,0},{0,0.11125,0},{0,0,0.6191},{0.48098,0,0},{0,0.15143,0},{0,0,0.84267},{0.62822,0,0},{0,0.19778,0},{0,0,1.1006},{0.79509,0,0},{0,0.25032,0},{0,0,1.393},{0.9816,0,0},{0,0.30904,0},{0,0,1.7197},{1.1877,0,0},{0,0.37393,0},{0,0,2.0809},{1.4135,0,0},{0,0.44501,0},{0,0,2.4764},{1.6589,0,0},{0,0.52227,0},{0,0,2.9063},{1.9239,0,0},{0,0.60571,0},{0,0,3.3707},{2.2086,0,0},{0,0.69533,0},{0,0,3.8694},{2.5129,0,0},{0,0.79113,0},{0,0,4.4025},{2.8368,0,0},{0,0.89312,0},{0,0,4.97},{3.1804,0,0},{0,1.0013,0},{0,0,5.5719},{3.5436,0,0},{0,1.1156,0},{0,0,6.2082},{3.9264,0,0},{0,1.2361,0},{0,0,6.8789},{4.3288,0,0},{0,1.3629,0},{0,0,7.584},{4.7509,0,0},{0,1.4957,0},{0,0,8.3235},{5.1927,0,0},{0,1.6348,0},{0,0,9.0974},{5.654,0,0},{0,1.7801,0},{0,0,9.9057},{6.135,0,0},{0,1.9315,0},{0,0,10.748},{6.6356,0,0},{0,2.0891,0},{0,0,11.625},{7.1558,0,0},{0,2.2529,0},{0,0,12.537},{7.6957,0,0},{0,2.4229,0},{0,0,13.483},{8.2552,0,0},{0,2.599,0},{0,0,14.463},{8.8344,0,0},{0,2.7813,0},{0,0,15.478}};
    double R[90][1];
    double F[90][1];
    double temp1[90][1], temp2[90][1], temp3[1][90], temp4[1][3];

    // Pointer declarations
    double **_f;//     = ptrAlloc(3, 1, f);
	double **_dx;//    = ptrAlloc(6, 1, dx);
	double **_y;//     = ptrAlloc(6, 1, y);
	double **_IqTnQ;// = ptrAlloc(90, 6, IqTnQ);
	double **_IqC;//   = ptrAlloc(90, 3, IqC);
	double **_WyG;//   = ptrAlloc(90, 3, WyG);
	double **_R;//     = ptrAlloc(90, 1, R);
	double **_F;//     = ptrAlloc(90, 1, F);
	double **_temp1;// = ptrAlloc(90, 1, temp1);
	double **_temp2;// = ptrAlloc(90, 1, temp2);
	double **_temp3;// = ptrAlloc(1, 90, temp3);
	double **_temp4;// = ptrAlloc(1, 3, temp4);

};

#endif /* AC_ATTITUDE_MPC_H */
